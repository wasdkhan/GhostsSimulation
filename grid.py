PELLET = 9
DECISION = 8
 
BLOCK = 0
FORBIDDEN = 2
DEN = 3

PACMAN = 10
BLINKY = -1

class Map:
	def __init__(self):
		self.map = [
		    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
		    [0,8,8,9,9,9,8,8,9,9,9,9,8,8,0,8,8,9,9,9,9,8,8,9,9,9,8,8,0],
		    [0,8,8,9,9,9,8,8,9,9,9,9,8,8,0,8,8,9,9,9,9,8,8,9,9,9,8,8,0],
		    [0,9,9,0,0,0,9,9,0,0,0,0,9,9,0,9,9,0,0,0,0,9,9,0,0,0,9,9,0],
		    [0,9,9,0,0,0,9,9,0,0,0,0,9,9,0,9,9,0,0,0,0,9,9,0,0,0,9,9,0],
		    [0,8,8,9,9,9,8,8,9,8,8,9,8,8,9,8,8,9,8,8,9,8,8,9,9,9,8,8,0],
		    [0,8,8,9,9,9,8,8,9,8,8,9,8,8,9,8,8,9,8,8,9,8,8,9,9,9,8,8,0],
		    [0,9,9,0,0,0,9,9,0,9,9,0,0,0,0,0,0,0,9,9,0,9,9,0,0,0,9,9,0],
		    [0,8,8,9,9,9,8,8,0,8,8,9,8,8,0,8,8,9,8,8,0,8,8,9,9,9,8,8,0],
		    [0,8,8,9,9,9,8,8,0,8,8,9,8,8,0,8,8,9,8,8,0,8,8,9,9,9,8,8,0],
		    [0,0,0,0,0,0,9,9,0,0,0,0,9,9,0,9,9,0,0,0,0,9,9,0,0,0,0,0,0],
		    [0,2,2,2,2,0,9,9,0,8,8,9,8,8,9,8,8,9,8,8,0,9,9,0,2,2,2,2,0],
		    [0,2,2,2,2,0,9,9,0,8,8,9,8,8,9,8,8,9,8,8,0,9,9,0,2,2,2,2,0],
		    [0,0,0,0,0,0,9,9,0,9,9,0,0,3,3,3,0,0,9,9,0,9,9,0,0,0,0,0,0],
		    [0,9,9,9,9,9,8,8,9,8,8,0,3,3,3,3,3,0,8,8,9,8,8,9,9,9,9,9,0],
		    [0,9,9,9,9,9,8,8,9,8,8,0,3,3,3,3,3,0,8,8,9,8,8,9,9,9,9,9,0],
		    [0,0,0,0,0,0,9,9,0,9,9,0,0,0,0,0,0,0,9,9,0,9,9,0,0,0,0,0,0],
		    [0,2,2,2,2,0,9,9,0,8,8,9,9,9,9,9,9,9,8,8,0,9,9,0,2,2,2,2,0],
		    [0,2,2,2,2,0,9,9,0,8,8,9,9,9,9,9,9,9,8,8,0,9,9,0,2,2,2,2,0],
		    [0,0,0,0,0,0,9,9,0,9,9,0,0,0,0,0,0,0,9,9,0,9,9,0,0,0,0,0,0],
		    [0,8,8,9,9,9,8,8,9,8,8,9,8,8,0,8,8,9,8,8,9,8,8,9,9,9,8,8,0],
		    [0,8,8,9,9,9,8,8,9,8,8,9,8,8,0,8,8,9,8,8,9,8,8,9,9,9,8,8,0],
		    [0,9,9,0,0,0,9,9,0,0,0,0,9,9,0,9,9,0,0,0,0,9,9,0,0,0,9,9,0],
		    [0,8,8,8,8,0,8,8,9,8,8,9,8,8,9,8,8,9,8,8,9,8,8,0,8,8,8,8,0],
		    [0,8,8,8,8,0,8,8,9,8,8,9,8,8,9,8,8,9,8,8,9,8,8,0,8,8,8,8,0],
		    [0,0,0,9,9,0,9,9,0,9,9,0,0,0,0,0,0,0,9,9,0,9,9,0,9,9,0,0,0],
		    [0,8,8,8,8,9,8,8,0,8,8,9,8,8,0,8,8,9,8,8,0,8,8,9,8,8,8,8,0],
		    [0,8,8,8,8,9,8,8,0,8,8,9,8,8,0,8,8,9,8,8,0,8,8,9,8,8,8,8,0],
		    [0,9,9,0,0,0,0,0,0,0,0,0,9,9,0,9,9,0,0,0,0,0,0,0,0,0,9,9,0],
		    [0,8,8,9,9,9,9,9,9,9,9,9,8,8,9,8,8,9,9,9,9,9,9,9,9,9,8,8,0],
		    [0,8,8,9,9,9,9,9,9,9,9,9,8,8,9,8,8,9,9,9,9,9,9,9,9,9,8,8,0],
		    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
		]

	def valPos(self, pos): #return the value of the position
		if pos.y1 < 0 or pos.y2 < 0 or pos.x1 < 0 or pos.x2 < 0: #not valid indey
			return -1
		if self.map[pos.y1][pos.x1] == 0 or self.map[pos.y2][pos.x1] == 0 or self.map[pos.y1][pos.x2] == 0 or self.map[pos.y2][pos.x2] == 0: #wall
			return 0
		if self.map[pos.y1][pos.x1] == 2 or self.map[pos.y2][pos.x1] == 2 or self.map[pos.y1][pos.x2] == 2 or self.map[pos.y2][pos.x2] == 2: #forbidden
			return 2
		if self.map[pos.y1][pos.x1] == 3 or self.map[pos.y2][pos.x1] == 3 or self.map[pos.y1][pos.x2] == 3 or self.map[pos.y2][pos.x2] == 3: #den
			return 3
		if self.map[pos.y1][pos.x1] == 9 or self.map[pos.y2][pos.x1] == 9 or self.map[pos.y1][pos.x2] == 9 or self.map[pos.y2][pos.x2] == 9: #pellet node
			return 9
		if self.map[pos.y1][pos.x1] == 8 or self.map[pos.y2][pos.x1] == 8 or self.map[pos.y1][pos.x2] == 8 or self.map[pos.y2][pos.x2] == 8: #decision node
			return 8

	# def colorPos(self, pos, actor):
	# 	if actor == PACMAN:
	# 		self.map[pos.y1][pos.x1] = 10
	# 		self.map[pos.y2][pos.x1] = 10
	# 		self.map[pos.y1][pos.x2] = 10
	# 		self.map[pos.y2][pos.x2] = 10
	# 	elif actor == BLINKY:
	# 		self.map[pos.y1][pos.x1] = -1
	# 		self.map[pos.y2][pos.x1] = -1
	# 		self.map[pos.y1][pos.x2] = -1
	# 		self.map[pos.y2][pos.x2] = -1

	# def resetColor(self, map2):
	# 	self.map = map2